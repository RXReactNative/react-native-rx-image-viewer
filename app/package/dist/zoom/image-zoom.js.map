{"version":3,"sources":["../../src/zoom/image-zoom.js"],"names":["React","Component","StyleSheet","View","Animated","PanResponder","LayoutChangeEvent","UIManager","findNodeHandle","styles","ICenterOn","ZoomPropsType","ZoomDefaultProps","State","RXZoom","constructor","props","resetScale","positionX","positionY","scale","animatedScale","setValue","panResponderReleaseResolve","enableSwipeDown","swipeDownThreshold","onSwipeDown","swipeDownOffset","enableCenterFocus","timing","toValue","duration","start","imageWidth","cropWidth","animatedPositionX","imageHeight","cropHeight","animatedPositionY","verticalMax","horizontalMax","horizontalWholeOuterCounter","imageDidMove","relativeLocation","jsxElement","_that","console","warn","handle","measure","x","y","width","height","pageX","pageY","Math","ceil","layout","nativeEvent","event","layoutChange","lastPositionX","Value","lastPositionY","zoomLastDistance","zoomCurrentDistance","imagePanResponder","lastTouchStartTime","horizontalWholeCounter","verticalWholeCounter","centerDiffX","centerDiffY","singleClickTimeout","longPressTimeout","lastClickTime","doubleClickX","doubleClickY","isDoubleClick","isLongPress","isHorizontalWrap","componentWillReceiveProps","nextProps","centerOn","didCenterOnChange","componentDidMount","componentWillMount","create","onStartShouldSetPanResponder","onPanResponderTerminationRequest","onPanResponderGrant","evt","Date","getTime","clearTimeout","changedTouches","length","centerX","centerY","setTimeout","onLongPress","longPressTime","doubleClickInterval","onDoubleClick","enableDoubleClickZoom","beforeScale","diffScale","parallel","onPanResponderMove","gestureState","diffX","dx","diffY","dy","abs","panToMove","horizontalOuterRangeOffset","maxOverflow","handlePanSwipeDown","pinchToZoom","minX","maxX","locationX","minY","maxY","locationY","widthDistance","heightDistance","diagonalDistance","sqrt","Number","toFixed","distanceDiff","zoom","minScale","maxScale","onPanResponderRelease","moveDistance","clickDistance","onClick","responderRelease","vx","onPanResponderTerminate","type","onMove","params","paramsNext","handleLayout","reset","render","animateConf","transform","translateX","translateY","parentStyles","flatten","style","pan","panHandlers","configStyles","RXImageViewerStyle","store","imageViewer","ImageStyles","error","lastStyles","container","e","children","defaultProps"],"mappings":"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","file":"image-zoom.js","sourcesContent":["/**\n * @this image-zoom.component\n * \n * @flow \n * \n * 修改源码： `v2.1.11`\n * NPM.js: react-native-image-zoom\n * gitHub: https://github.com/ascoders/react-native-image-zoom\n * \n */\n/* eslint-disable */\n\n'use strict'\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Animated,\n  PanResponder,\n  LayoutChangeEvent,\n  UIManager,\n  findNodeHandle\n} from 'react-native';\n\nimport styles from './image-zoom.style';\nimport { ICenterOn, ZoomPropsType, ZoomDefaultProps, State } from './image-zoom.type';\n\nexport default class RXZoom extends Component {\n  static defaultProps = {\n    ...ZoomPropsType\n  };\n\n  static defaultProps = {\n\t\t...ZoomDefaultProps,\n  }\n\n  constructor(props) {\n    super(props);\n    // 上次/当前/动画 x 位移\n    this.lastPositionX = null; // number | null\n    this.positionX = 0;\n    this.animatedPositionX = new Animated.Value(0);\n\n    // 上次/当前/动画 y 位移\n    this.lastPositionY =  null; // number | null\n    this.positionY = 0;\n    this.animatedPositionY = new Animated.Value(0);\n\n    // 缩放大小\n    this.scale = 1;\n    this.animatedScale = new Animated.Value(1);\n    this.zoomLastDistance = null; // number | null\n    this.zoomCurrentDistance = 0;\n\n    // 图片手势处理\n    this.imagePanResponder = null; // PanResponderInstance | null\n\n    // 上次手按下去的时间\n    this.lastTouchStartTime = 0;\n\n    // 滑动过程中，整体横向过界偏移量\n    this.horizontalWholeOuterCounter = 0;\n\n    // 滑动过程中，swipeDown 偏移量\n    this.swipeDownOffset = 0;\n\n    // 滑动过程中，x y的总位移\n    this.horizontalWholeCounter = 0;\n    this.verticalWholeCounter = 0;\n\n    // 两手距离中心点位置\n    this.centerDiffX = 0;\n    this.centerDiffY = 0;\n\n    // 触发单击的 timeout\n    this.singleClickTimeout = null;\n\n    // 计算长按的 timeout\n    this.longPressTimeout = null;\n\n    // 上一次点击的时间\n    this.lastClickTime = 0;\n\n    // 双击时的位置\n    this.doubleClickX = 0;\n    this.doubleClickY = 0;\n\n    // 是否双击了\n    this.isDoubleClick = false;\n\n    // 是否是长按\n    this.isLongPress = false;\n\n    // 是否在左右滑\n    this.isHorizontalWrap = false;\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    // Either centerOn has never been called, or it is a repeat and we should ignore it\n    if (\n      (nextProps.centerOn && !this.props.centerOn) ||\n      (nextProps.centerOn && this.props.centerOn && this.didCenterOnChange(this.props.centerOn, nextProps.centerOn))\n    ) {\n      this.centerOn(nextProps.centerOn);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.centerOn) {\n      this.centerOn(this.props.centerOn);\n    }\n  }\n\n  componentWillMount() {\n    this.imagePanResponder = PanResponder.create({\n      // 要求成为响应者：\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderTerminationRequest: () => false,\n\n      onPanResponderGrant: evt => {\n        // 开始手势操作\n        this.lastPositionX = null;\n        this.lastPositionY = null;\n        this.zoomLastDistance = null;\n        this.horizontalWholeCounter = 0;\n        this.verticalWholeCounter = 0;\n        this.lastTouchStartTime = new Date().getTime();\n        this.isDoubleClick = false;\n        this.isLongPress = false;\n        this.isHorizontalWrap = false;\n\n        // 任何手势开始，都清空单击计时器\n        if (this.singleClickTimeout) {\n          clearTimeout(this.singleClickTimeout);\n        }\n\n        if (evt.nativeEvent.changedTouches.length > 1) {\n          const centerX = (evt.nativeEvent.changedTouches[0].pageX + evt.nativeEvent.changedTouches[1].pageX) / 2;\n          this.centerDiffX = centerX - this.props.cropWidth / 2;\n\n          const centerY = (evt.nativeEvent.changedTouches[0].pageY + evt.nativeEvent.changedTouches[1].pageY) / 2;\n          this.centerDiffY = centerY - this.props.cropHeight / 2;\n        }\n\n        // 计算长按\n        if (this.longPressTimeout) {\n          clearTimeout(this.longPressTimeout);\n        }\n        this.longPressTimeout = setTimeout(() => {\n          this.isLongPress = true;\n          if (this.props.onLongPress) {\n            this.props.onLongPress();\n          }\n        }, this.props.longPressTime);\n\n        if (evt.nativeEvent.changedTouches.length <= 1) {\n          // 一个手指的情况\n          if (new Date().getTime() - this.lastClickTime < (this.props.doubleClickInterval || 0)) {\n            // 认为触发了双击\n            this.lastClickTime = 0;\n            if (this.props.onDoubleClick) {\n              this.props.onDoubleClick();\n            }\n\n            // 取消长按\n            clearTimeout(this.longPressTimeout);\n\n            // 因为可能触发放大，因此记录双击时的坐标位置\n            this.doubleClickX = evt.nativeEvent.changedTouches[0].pageX;\n            this.doubleClickY = evt.nativeEvent.changedTouches[0].pageY;\n\n            // 缩放\n            this.isDoubleClick = true;\n\n            if (this.props.enableDoubleClickZoom) {\n              if (this.scale > 1 || this.scale < 1) {\n                // 回归原位\n                this.scale = 1;\n\n                this.positionX = 0;\n                this.positionY = 0;\n              } else {\n                // 开始在位移地点缩放\n                // 记录之前缩放比例\n                // 此时 this.scale 一定为 1\n                const beforeScale = this.scale;\n\n                // 开始缩放\n                this.scale = 2;\n\n                // 缩放 diff\n                const diffScale = this.scale - beforeScale;\n                // 找到两手中心点距离页面中心的位移\n                // 移动位置\n                this.positionX = ((this.props.cropWidth / 2 - this.doubleClickX) * diffScale) / this.scale;\n\n                this.positionY = ((this.props.cropHeight / 2 - this.doubleClickY) * diffScale) / this.scale;\n              }\n\n              this.imageDidMove('centerOn');\n\n              Animated.parallel([\n                Animated.timing(this.animatedScale, {\n                  toValue: this.scale,\n                  duration: 100\n                }),\n                Animated.timing(this.animatedPositionX, {\n                  toValue: this.positionX,\n                  duration: 100\n                }),\n                Animated.timing(this.animatedPositionY, {\n                  toValue: this.positionY,\n                  duration: 100\n                })\n              ]).start();\n            }\n          } else {\n            this.lastClickTime = new Date().getTime();\n          }\n        }\n      },\n      onPanResponderMove: (evt, gestureState) => {\n        if (this.isDoubleClick) {\n          // 有时双击会被当做位移，这里屏蔽掉\n          return;\n        }\n\n        if (evt.nativeEvent.changedTouches.length <= 1) {\n          // x 位移\n          let diffX = gestureState.dx - (this.lastPositionX || 0);\n          if (this.lastPositionX === null) {\n            diffX = 0;\n          }\n          // y 位移\n          let diffY = gestureState.dy - (this.lastPositionY || 0);\n          if (this.lastPositionY === null) {\n            diffY = 0;\n          }\n\n          // 保留这一次位移作为下次的上一次位移\n          this.lastPositionX = gestureState.dx;\n          this.lastPositionY = gestureState.dy;\n\n          this.horizontalWholeCounter += diffX;\n          this.verticalWholeCounter += diffY;\n\n          if (Math.abs(this.horizontalWholeCounter) > 5 || Math.abs(this.verticalWholeCounter) > 5) {\n            // 如果位移超出手指范围，取消长按监听\n            clearTimeout(this.longPressTimeout);\n          }\n\n          if (this.props.panToMove) {\n            // 处理左右滑，如果正在 swipeDown，左右滑失效\n            if (this.swipeDownOffset === 0) {\n              if (Math.abs(diffX) > Math.abs(diffY)) {\n                this.isHorizontalWrap = true;\n              }\n\n              // diffX > 0 表示手往右滑，图往左移动，反之同理\n              // horizontalWholeOuterCounter > 0 表示溢出在左侧，反之在右侧，绝对值越大溢出越多\n              if (this.props.imageWidth * this.scale > this.props.cropWidth) {\n                // 如果图片宽度大图盒子宽度， 可以横向拖拽\n                // 没有溢出偏移量或者这次位移完全收回了偏移量才能拖拽\n                if (this.horizontalWholeOuterCounter > 0) {\n                  // 溢出在右侧\n                  if (diffX < 0) {\n                    // 从右侧收紧\n                    if (this.horizontalWholeOuterCounter > Math.abs(diffX)) {\n                      // 偏移量还没有用完\n                      this.horizontalWholeOuterCounter += diffX;\n                      diffX = 0;\n                    } else {\n                      // 溢出量置为0，偏移量减去剩余溢出量，并且可以被拖动\n                      diffX += this.horizontalWholeOuterCounter;\n                      this.horizontalWholeOuterCounter = 0;\n                      if (this.props.horizontalOuterRangeOffset) {\n                        this.props.horizontalOuterRangeOffset(0);\n                      }\n                    }\n                  } else {\n                    // 向右侧扩增\n                    this.horizontalWholeOuterCounter += diffX;\n                  }\n                } else if (this.horizontalWholeOuterCounter < 0) {\n                  // 溢出在左侧\n                  if (diffX > 0) {\n                    // 从左侧收紧\n                    if (Math.abs(this.horizontalWholeOuterCounter) > diffX) {\n                      // 偏移量还没有用完\n                      this.horizontalWholeOuterCounter += diffX;\n                      diffX = 0;\n                    } else {\n                      // 溢出量置为0，偏移量减去剩余溢出量，并且可以被拖动\n                      diffX += this.horizontalWholeOuterCounter;\n                      this.horizontalWholeOuterCounter = 0;\n                      if (this.props.horizontalOuterRangeOffset) {\n                        this.props.horizontalOuterRangeOffset(0);\n                      }\n                    }\n                  } else {\n                    // 向左侧扩增\n                    this.horizontalWholeOuterCounter += diffX;\n                  }\n                } else {\n                  // 溢出偏移量为0，正常移动\n                }\n\n                // 产生位移\n                this.positionX += diffX / this.scale;\n\n                // 但是横向不能出现黑边\n                // 横向能容忍的绝对值\n                const horizontalMax = (this.props.imageWidth * this.scale - this.props.cropWidth) / 2 / this.scale;\n                if (this.positionX < -horizontalMax) {\n                  // 超越了左边临界点，还在继续向左移动\n                  this.positionX = -horizontalMax;\n\n                  // 让其产生细微位移，偏离轨道\n                  this.horizontalWholeOuterCounter += -1 / 1e10;\n                } else if (this.positionX > horizontalMax) {\n                  // 超越了右侧临界点，还在继续向右移动\n                  this.positionX = horizontalMax;\n\n                  // 让其产生细微位移，偏离轨道\n                  this.horizontalWholeOuterCounter += 1 / 1e10;\n                }\n                this.animatedPositionX.setValue(this.positionX);\n              } else {\n                // 不能横向拖拽，全部算做溢出偏移量\n                this.horizontalWholeOuterCounter += diffX;\n              }\n\n              // 溢出量不会超过设定界限\n              if (this.horizontalWholeOuterCounter > (this.props.maxOverflow || 0)) {\n                this.horizontalWholeOuterCounter = this.props.maxOverflow || 0;\n              } else if (this.horizontalWholeOuterCounter < -(this.props.maxOverflow || 0)) {\n                this.horizontalWholeOuterCounter = -(this.props.maxOverflow || 0);\n              }\n\n              if (this.horizontalWholeOuterCounter !== 0) {\n                // 如果溢出偏移量不是0，执行溢出回调\n                if (this.props.horizontalOuterRangeOffset) {\n                  this.props.horizontalOuterRangeOffset(this.horizontalWholeOuterCounter);\n                }\n              }\n            }\n\n            // 如果图片高度大于盒子高度， 可以纵向弹性拖拽\n            if (this.props.imageHeight * this.scale > this.props.cropHeight) {\n              this.positionY += diffY / this.scale;\n              this.animatedPositionY.setValue(this.positionY);\n\n              // 如果图片上边缘脱离屏幕上边缘，则进入 swipeDown 动作\n              // if (\n              //   (this.props.imageHeight / 2 - this.positionY) * this.scale <\n              //   this.props.cropHeight / 2\n              // ) {\n              //   if (this.props.enableSwipeDown) {\n              //     this.swipeDownOffset += diffY\n\n              //     // 只要滑动溢出量不小于 0，就可以拖动\n              //     if (this.swipeDownOffset > 0) {\n              //       this.positionY += diffY / this.scale\n              //       this.animatedPositionY.setValue(this.positionY)\n\n              //       // 越到下方，缩放越小\n              //       this.scale = this.scale - diffY / 1000\n              //       this.animatedScale.setValue(this.scale)\n              //     }\n              //   }\n              // }\n            } else {\n              // swipeDown 不允许在已经有横向偏移量时触发\n              if (this.props.enableSwipeDown && !this.isHorizontalWrap) {\n                // 图片高度小于盒子高度，只能向下拖拽，而且一定是 swipeDown 动作\n                this.swipeDownOffset += diffY;\n\n                // 只要滑动溢出量不小于 0，就可以拖动\n                if (this.swipeDownOffset > 0) {\n                  this.positionY += diffY / this.scale;\n                  if (this.props.handlePanSwipeDown) {\n                    this.props.handlePanSwipeDown(this.positionY)\n                  }\n                  // 越到下方，缩放越小\n                  // this.animatedScale.setValue(this.scale);\n                }\n              }\n            }\n          }\n        } else {\n          // 多个手指的情况\n          // 取消长按状态\n          if (this.longPressTimeout) {\n            clearTimeout(this.longPressTimeout);\n          }\n\n          if (this.props.pinchToZoom) {\n            // 找最小的 x 和最大的 x\n            let minX = 0;\n            let maxX = 0;\n            if (evt.nativeEvent.changedTouches[0].locationX > evt.nativeEvent.changedTouches[1].locationX) {\n              minX = evt.nativeEvent.changedTouches[1].pageX;\n              maxX = evt.nativeEvent.changedTouches[0].pageX;\n            } else {\n              minX = evt.nativeEvent.changedTouches[0].pageX;\n              maxX = evt.nativeEvent.changedTouches[1].pageX;\n            }\n\n            let minY = 0;\n            let maxY = 0;\n            if (evt.nativeEvent.changedTouches[0].locationY > evt.nativeEvent.changedTouches[1].locationY) {\n              minY = evt.nativeEvent.changedTouches[1].pageY;\n              maxY = evt.nativeEvent.changedTouches[0].pageY;\n            } else {\n              minY = evt.nativeEvent.changedTouches[0].pageY;\n              maxY = evt.nativeEvent.changedTouches[1].pageY;\n            }\n\n            const widthDistance = maxX - minX;\n            const heightDistance = maxY - minY;\n            const diagonalDistance = Math.sqrt(widthDistance * widthDistance + heightDistance * heightDistance);\n            this.zoomCurrentDistance = Number(diagonalDistance.toFixed(1));\n\n            if (this.zoomLastDistance !== null) {\n              const distanceDiff = (this.zoomCurrentDistance - this.zoomLastDistance) / 200;\n              let zoom = this.scale + distanceDiff;\n\n              if (zoom < (this.props.minScale || 0)) {\n                zoom = this.props.minScale || 0;\n              }\n              if (zoom > (this.props.maxScale || 0)) {\n                zoom = this.props.maxScale || 0;\n              }\n\n              // 记录之前缩放比例\n              const beforeScale = this.scale;\n\n              // 开始缩放\n              this.scale = zoom;\n              this.animatedScale.setValue(this.scale);\n\n              // 图片要慢慢往两个手指的中心点移动\n              // 缩放 diff\n              const diffScale = this.scale - beforeScale;\n              // 找到两手中心点距离页面中心的位移\n              // 移动位置\n              this.positionX -= (this.centerDiffX * diffScale) / this.scale;\n              this.positionY -= (this.centerDiffY * diffScale) / this.scale;\n              this.animatedPositionX.setValue(this.positionX);\n              this.animatedPositionY.setValue(this.positionY);\n            }\n            this.zoomLastDistance = this.zoomCurrentDistance;\n          }\n        }\n\n        this.imageDidMove('onPanResponderMove');\n      },\n      onPanResponderRelease: (evt, gestureState) => {\n        // 取消长按\n        if (this.longPressTimeout) {\n          clearTimeout(this.longPressTimeout);\n        }\n\n        // 双击结束，结束尾判断\n        if (this.isDoubleClick) {\n          return;\n        }\n\n        // 长按结束，结束尾判断\n        if (this.isLongPress) {\n          return;\n        }\n\n        // 如果是单个手指、距离上次按住大于预设秒、滑动距离小于预设值, 则可能是单击（如果后续双击间隔内没有开始手势）\n        // const stayTime = new Date().getTime() - this.lastTouchStartTime!\n        const moveDistance = Math.sqrt(gestureState.dx * gestureState.dx + gestureState.dy * gestureState.dy);\n        const { locationX, locationY, pageX, pageY } = evt.nativeEvent;\n\n        if (evt.nativeEvent.changedTouches.length === 1 && moveDistance < (this.props.clickDistance || 0)) {\n          this.singleClickTimeout = setTimeout(() => {\n            if (this.props.onClick) {\n              this.props.onClick({ locationX, locationY, pageX, pageY });\n            }\n          }, this.props.doubleClickInterval);\n        } else {\n          // 多手势结束，或者滑动结束\n          if (this.props.responderRelease) {\n            this.props.responderRelease(gestureState.vx, this.scale);\n          }\n\n          this.panResponderReleaseResolve();\n        }\n      },\n      onPanResponderTerminate: () => {\n        //\n      }\n    });\n  }\n\n  resetScale = () => {\n    this.positionX = 0;\n    this.positionY = 0;\n    this.scale = 1;\n    this.animatedScale.setValue(1);\n  }\n\n  panResponderReleaseResolve = () => {\n    // 判断是否是 swipeDown\n    if (this.props.enableSwipeDown && this.props.swipeDownThreshold) {\n      if (this.props.onSwipeDown) {\n        if (this.swipeDownOffset > this.props.swipeDownThreshold) {\n          this.props.onSwipeDown(true);\n        }\n        // Stop reset.\n        else {\n          this.props.onSwipeDown(false);\n        }\n      }\n    }\n\n    if (this.props.enableCenterFocus && this.scale < 1) {\n      // 如果缩放小于1，强制重置为 1\n      this.scale = 1;\n      Animated.timing(this.animatedScale, {\n        toValue: this.scale,\n        duration: 100\n      }).start();\n    }\n\n    if (this.props.imageWidth * this.scale <= this.props.cropWidth) {\n      // 如果图片宽度小于盒子宽度，横向位置重置\n      this.positionX = 0;\n      Animated.timing(this.animatedPositionX, {\n        toValue: this.positionX,\n        duration: 100\n      }).start();\n    }\n\n    if (this.props.imageHeight * this.scale <= this.props.cropHeight) {\n      // 如果图片高度小于盒子高度，纵向位置重置\n      this.positionY = 0;\n      Animated.timing(this.animatedPositionY, {\n        toValue: this.positionY,\n        duration: 100\n      }).start();\n    }\n\n    // 横向肯定不会超出范围，由拖拽时控制\n    // 如果图片高度大于盒子高度，纵向不能出现黑边\n    if (this.props.imageHeight * this.scale > this.props.cropHeight) {\n      // 纵向能容忍的绝对值\n      const verticalMax = (this.props.imageHeight * this.scale - this.props.cropHeight) / 2 / this.scale;\n      if (this.positionY < -verticalMax) {\n        this.positionY = -verticalMax;\n      } else if (this.positionY > verticalMax) {\n        this.positionY = verticalMax;\n      }\n      Animated.timing(this.animatedPositionY, {\n        toValue: this.positionY,\n        duration: 100\n      }).start();\n    }\n\n    if (this.props.imageWidth * this.scale > this.props.cropWidth) {\n      // 纵向能容忍的绝对值\n      const horizontalMax = (this.props.imageWidth * this.scale - this.props.cropWidth) / 2 / this.scale;\n      if (this.positionX < -horizontalMax) {\n        this.positionX = -horizontalMax;\n      } else if (this.positionX > horizontalMax) {\n        this.positionX = horizontalMax;\n      }\n      Animated.timing(this.animatedPositionX, {\n        toValue: this.positionX,\n        duration: 100\n      }).start();\n    }\n\n    // 拖拽正常结束后,如果没有缩放,直接回到0,0点\n    if (this.props.enableCenterFocus && this.scale === 1) {\n      this.positionX = 0;\n      this.positionY = 0;\n      Animated.timing(this.animatedPositionX, {\n        toValue: this.positionX,\n        duration: 100\n      }).start();\n      Animated.timing(this.animatedPositionY, {\n        toValue: this.positionY,\n        duration: 100\n      }).start();\n    }\n\n    // 水平溢出量置空\n    this.horizontalWholeOuterCounter = 0;\n\n    // swipeDown 溢出量置空\n    this.swipeDownOffset = 0;\n\n    this.imageDidMove('onPanResponderRelease');\n  };\n\n  imageDidMove(type: string) {\n    if (this.props.onMove) {\n      this.props.onMove({\n        type,\n        positionX: this.positionX,\n        positionY: this.positionY,\n        scale: this.scale,\n        zoomCurrentDistance: this.zoomCurrentDistance\n      });\n    }\n  }\n\n  didCenterOnChange(\n    params = { x: 0, y: 0, scale: 0, duration: 0},\n    paramsNext = { x: 0, y: 0, scale: 0, duration: 0}\n  ) {\n    return params.x !== paramsNext.x || params.y !== paramsNext.y || params.scale !== paramsNext.scale;\n  }\n\n  centerOn(params: ICenterOn = {}) {\n    this.positionX = params.x || 0;\n    this.positionY = params.y || 0;\n    this.scale = params.scale || 0;\n    const duration = params.duration || 300;\n    Animated.parallel([\n      Animated.timing(this.animatedScale, {\n        toValue: this.scale,\n        duration\n      }),\n      Animated.timing(this.animatedPositionX, {\n        toValue: this.positionX,\n        duration\n      }),\n      Animated.timing(this.animatedPositionY, {\n        toValue: this.positionY,\n        duration\n      })\n    ]).start(() => {\n      this.imageDidMove('centerOn');\n    });\n  }\n\n  /**\n   * 图片区域视图渲染完毕\n   */\n  handleLayout(event: LayoutChangeEvent) {\n    const {layoutChange} = this.props;\n    if (layoutChange) {\n      layoutChange(event);\n    }\n  }\n\n  /**\n   * 重置大小和位置\n   */\n  reset() {\n    this.scale = 1;\n    this.animatedScale.setValue(this.scale);\n    this.positionX = 0;\n    this.animatedPositionX.setValue(this.positionX);\n    this.positionY = 0;\n    this.animatedPositionY.setValue(this.positionY);\n  }\n\n  relativeLocation = (jsxElement) => {\n    let _that = this;\n    if(!jsxElement){\n      console.warn('LocationUtil->relativeLocation-> jsxElement = null')\n      return;\n    }\n    const handle = findNodeHandle(jsxElement);\n    UIManager.measure(handle,(x, y, width, height, pageX, pageY)=>{\n      x = Math.ceil(x);\n      y = Math.ceil(y);\n      width = Math.ceil(width);\n      height = Math.ceil(height);\n      pageX = Math.ceil(pageX);\n      pageY = Math.ceil(pageY);\n      if(!x && !y && !width && !height) return;\n      let layout = { x, y, width, height};\n      var nativeEvent = {layout};\n      var event = {nativeEvent};\n      _that.props && _that.props.layoutChange && _that.props.layoutChange(event);\n    })\n  }\n\n  render(){\n    const animateConf = {\n      transform: [\n        {\n          scale: this.animatedScale\n        },\n        {\n          translateX: this.animatedPositionX\n        },\n        {\n          translateY: this.animatedPositionY\n        }\n      ]\n    };\n    const parentStyles = StyleSheet.flatten(this.props.style);\n\n    let pan = this.imagePanResponder || {};\n    let panHandlers = pan.panHandlers || {};\n\n    let configStyles = styles;\n    try {\n      configStyles = RXImageViewerStyle.store.imageViewer.ImageStyles;\n    } catch (error) {\n      configStyles = styles;\n      console.warn('RXImageViewerStyle -> image-zoom.js -> render() -> configImageStyles error')\n    }\n\n    let lastStyles = styles;\n    if (configStyles.container) { // 可以自定义样式，否则采用默认的样式\n      lastStyles = configStyles;\n    }\n\n    return (\n      <View\n        style={{\n          ...lastStyles.container,\n          ...parentStyles,\n          width: this.props.cropWidth,\n          height: this.props.cropHeight\n        }}\n        {...panHandlers}\n      >\n        <Animated.View style={animateConf} renderToHardwareTextureAndroid>\n          <View\n            ref={(e)=> {if(!e) return; this.relativeLocation(e)}}\n            // onLayout={this.handleLayout}\n            style={{\n              width: this.props.imageWidth,\n              height: this.props.imageHeight\n            }}\n          >\n            {this.props.children}\n          </View>\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\n/* eslint-disable */"]}